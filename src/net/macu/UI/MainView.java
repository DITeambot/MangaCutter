package net.macu.UI;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import net.macu.core.JobManager;
import net.macu.core.Main;
import net.macu.settings.L;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ItemEvent;
import java.util.Iterator;

public class MainView {
    private JTextField urlTextField;
    private JButton startButton;
    private JButton cancelButton;
    private JProgressBar progressBar;
    private JPanel mainPanel;
    private JComboBox<String> pathSelector;
    private JPanel selectableFormPannel;
    private JLabel urlLabel;
    private Form currentForm;
    private Thread t;

    public MainView() {
        cancelButton.addActionListener(e -> new Thread(() -> {
            JobManager.cancel();
            if (t != null && t.isAlive()) t.interrupt();
            ViewManager.resetProgress();
            startButton.setEnabled(true);
            cancelButton.setEnabled(false);
        }).start());
        startButton.addActionListener(e -> {
            t = new Thread(() -> {
                startButton.setEnabled(false);
                cancelButton.setEnabled(true);
                if (validateInput()) {
                    if (JobManager.runJob(urlTextField.getText(), currentForm.getConfiguredPipeline()))
                        ViewManager.showMessageDialog(L.get("UI.MainView.complete_message"));
                }
                ViewManager.resetProgress();
                cancelButton.setEnabled(false);
                startButton.setEnabled(true);
            });
            t.start();
        });
        Iterator<Form> forms = Main.getForms().iterator();
        for (int i = 0; forms.hasNext(); i++) {
            pathSelector.insertItemAt(forms.next().getDescription(), i);
        }
        pathSelector.addItemListener(e -> {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                currentForm = (Form) Main.getForms().toArray()[pathSelector.getSelectedIndex()];
                selectableFormPannel.removeAll();
                selectableFormPannel.add(currentForm.getRootComponent());
                ViewManager.packFrame();
            }
        });
        pathSelector.setSelectedIndex(0);
        urlLabel.setText(L.get("UI.MainView.url_label"));
        cancelButton.setText(L.get("UI.MainView.cancel_button"));
        startButton.setText(L.get("UI.MainView.start_button"));
    }

    public boolean validateInput() {
        if (urlTextField.getText().isEmpty()) {
            ViewManager.showMessageDialog(L.get("UI.MainView.validateInput.empty_url"));
            return false;
        }
        return currentForm.validateInput();
    }

    public void startProgress(int max, String message) {
        progressBar.setValue(0);
        progressBar.setMaximum(max);
        progressBar.setString(message);
        progressBar.setEnabled(true);
    }

    public void incrementProgress(String message) {
        progressBar.setValue(progressBar.getValue() + 1);
        progressBar.setString(message);
    }

    public void resetProgress() {
        progressBar.setValue(0);
        progressBar.setMaximum(1);
        progressBar.setString("");
        progressBar.setEnabled(false);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 2, new Insets(10, 10, 3, 10), -1, -1));
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(panel1, gbc);
        urlLabel = new JLabel();
        urlLabel.setText("Link to chapter:");
        panel1.add(urlLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        urlTextField = new JTextField();
        panel1.add(urlTextField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(panel2, gbc);
        pathSelector = new JComboBox();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(3, 10, 3, 10);
        panel2.add(pathSelector, gbc);
        selectableFormPannel = new JPanel();
        selectableFormPannel.setLayout(new BorderLayout(0, 0));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(3, 10, 3, 10);
        mainPanel.add(selectableFormPannel, gbc);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridLayoutManager(1, 1, new Insets(3, 10, 3, 10), -1, -1));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(panel3, gbc);
        progressBar = new JProgressBar();
        progressBar.setEnabled(false);
        progressBar.setString("0%");
        progressBar.setStringPainted(true);
        panel3.add(progressBar, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new GridLayoutManager(1, 3, new Insets(3, 10, 10, 10), -1, -1));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(panel4, gbc);
        startButton = new JButton();
        startButton.setText("Start");
        panel4.add(startButton, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cancelButton = new JButton();
        cancelButton.setEnabled(false);
        cancelButton.setText("Cancel");
        panel4.add(cancelButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel4.add(spacer1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
